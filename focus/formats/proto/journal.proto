// Journal Proto
// -------------
//
// This format is intended to be used as a container format for other proto data.

syntax = "proto3";

package journal;

message CyclicChecksum {
  enum Algorithm {
    XXHASH64 = 0;
  }

  Algorithm algorithm = 1;
  bytes checksum = 2;
}

message Index {
  // Entries relate to Journal.Chunk instancess
  message Entry {
    // The serial number of the journal.
    uint64 serial = 1;

    // Offset of the entry in the journal.
    uint64 offset = 2;

    // Size of the entry in the journal.
    uint32 size = 3;

    // Cyclic checksum of the journal up to that point.
    CyclicChecksum checksum = 4;

    // User-defined tag
    uint32 tag = 5;

    // Arbitrary user data, intended to be kept small
    bytes attachment = 6;
  }

  repeated Entry entries = 1;
}


message Journal {
  message Chunk {
    // The lengths of the messages
    message Fragment {
      uint32 length = 1;
      bytes body = 2;
    }
  }

  uint64 serial = 1;
  repeated Chunk chunks = 2;
}

// Many messages of the same
