syntax = "proto3";

package focus.workbench;

import "google/protobuf/timestamp.proto";

message Hash {
  enum Algorithm {
    SHA1 = 0;
    SHA256 = 1;
  }

  Algorithm algorithm = 1;
  bytes value = 2;
}

message Workbench {
  message Handle { uint64 identifer = 1; }
}

message Repository {
  message Indicator {
    // Upstream URL for the repository.
    string upstream = 1;

    // Branch to base the workbench on.
    string branch = 2;

    // Merge base.
    Hash merge_base = 3;
  }
}

message Create {
  message Request { Repository.Indicator repo_indicator = 1; }

  message Response { Workbench.Handle handle = 1; }
}

message Dispose {
  message Request { Workbench.Handle handle = 1; }

  message Response {}
}

service Workbenches {
  // Create a workbench to synchronize with
  rpc Create(Create.Request) returns (Create.Response) {}

  rpc Dispose(Dispose.Request) returns (Dispose.Response) {}
}

// service Outlines { rpc GetOutline() }

message Items {}

message Selection {
  message Layer {
    string name = 1;
  }
  message Coordinate {
    string value = 1;
  }

  repeated Layer layers = 1;
  repeated Coordinate coordinates = 2;
}

message Outline {
  message Request {
    Repository.Indicator repo_indicator = 1;
    repeated string layers = 2;
    // repeated string coordinates = 3;
  }

  message Response {}
}