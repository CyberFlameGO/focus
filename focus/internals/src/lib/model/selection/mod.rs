pub mod project;
pub mod selection;
pub use project::Project;
pub use selection::Selection;
mod data_paths;
use data_paths::DataPaths;
mod persisted_selection;
use persisted_selection::PersistedSelection;
pub mod selections;
pub use selections::Selections;
pub mod selection_operation_processor;
use selection_operation_processor::SelectionOperationProcessor;
pub mod operations;
pub use operations::Disposition;
pub use operations::Operation;
pub use operations::OperationProcessor;
pub use operations::OperationProcessorResult;
pub use operations::Underlying;
mod project_set;
pub use project_set::ProjectSet;
mod project_sets;
pub use project_sets::ProjectSets;
mod projects;
pub use projects::Projects;
#[cfg(test)]
mod testing;

type Target = crate::target::Target;
type TargetSet = crate::target::TargetSet;
type TargetError = crate::target::TargetError;
type Repo = super::repo::Repo;
type WorkingTree = super::repo::WorkingTree;
pub use crate::model::persistence::{load_model, store_model};
type FileBackedCollection<T> = crate::model::persistence::FileBackedCollection<T>;
