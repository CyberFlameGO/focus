#!/bin/bash

# shellcheck disable=SC1090
. "$(git --exec-path)/git-sh-setup"

set -euo pipefail

if [[ $# -lt 2 ]]; then
  die "Usage: $(basename "$0") remote-name url"
fi

env|sort >&2
exit 1

if is_bare_repository; then
  # this is set up by the git-sh-setup script
  cd "$GIT_DIR"
else
  cd_to_toplevel
fi

declare -r AUTHORMAP="usernode.tsv"

if [[ ! -f "${AUTHORMAP}" ]]; then
  die "mapping file not available, please retrieve usernode.tsv"
fi

REMOTE_NAME="$1"
URI="$2"

URI_RE='^twgit://source/dev/([[:alnum:]]+)$'

TAB=$'\t'

get_url_for_user() {
  local user
  user="$1"
  sane_grep -m1 -E "^${user}${TAB}" "$AUTHORMAP" |cut -d"${TAB}" -f2
}

if [[ "$URI" =~ $URI_RE ]]; then
  user="${BASH_REMATCH[1]}"

  real_url="$(get_url_for_user "$user")"

  if [[ -z "$real_url" ]]; then
    die "could not map user $user to a backend"
  fi

  # tack the user name on the end so we get the correct transfer.hideRefs
  # on the server side
  real_url="${real_url}/$user"

  if [[ "$REMOTE_NAME" =~ :// ]]; then
    REMOTE_NAME="$real_url"
  fi

  protocol="$(echo "$real_url" | LC_ALL=C sed -E -e 's|^([a-z]+)://.*|\1|')" || die "bad URL format: $real_url"

  exec "git-remote-${protocol}" "$REMOTE_NAME" "$real_url"

else
  die "unrecognized url scheme $URI"
fi
