#!/bin/bash

die() { echo "fatal: $*" >&2; exit 1; }

export LC_ALL=C
unset CDPATH

if [[ -n "$TWGIT_WRAPPER_ENTERED" ]]; then
  die "[BUG] reentered twgit wrapper!"
fi
export TWGIT_WRAPPER_ENTERED=1


# shellcheck disable=SC1090
. "$(git --exec-path)/git-sh-setup" || die "couldn't source git-sh-setup"
set -euo pipefail # needs to happen *after* the above because -e makes it die

cleanup() { [[ -n "${TEMP:-}" ]] && rm -rf "${TEMP}"; }
trap cleanup EXIT

# only automatically fetch the admin ref once every this many seconds
declare -r FETCH_DELAY_SEC=$(( 15 * 60 ))
declare -r TWGIT_LAST_FETCH_KEY='twgit.admin.lastfetch'

NOW="$(date '+%s')" || die "date failed!?"

setup_env() {
  : "${TWGIT_ADMIN_REF:=$(git   config --get --default=refs/admin/twgit twgit.admin.localref)}"
  : "${TWGIT_REMOTE_REF:=$(git  config --get --default=refs/admin/twgit twgit.admin.remoteref)}"
  : "${TWGIT_REMOTE_NAME:=$(git config --get --default=origin           twgit.admin.remotename)}"

  : "${TWGIT_CONFIG_BLOB:=twgit.toml}"
  : "${TWGIT_BIN:=twgit}"
}

# NOTE: this script assumes that "origin" does *not* have a twgit:// url associated with it
# if it does this could cause an endless loop.
ensure_remote_is_not_a_twgit_url() {
  setup_env
  if [[ "$TWGIT_REMOTE_NAME" =~ ^twgit:// ]]; then
    die "cannot use twgit if the \$TWGIT_REMOTE_NAME itself is a twgit:// url"
  fi
}


do_fetch_admin_ref() {
  setup_env
  local fetch_opts
  fetch_opts=(--no-tags --no-auto-gc --refmap= --quiet)

  if git rev-parse "${TWGIT_ADMIN_REF}" &>/dev/null; then
    fetch_opts+=("--negotiation-tip=${TWGIT_ADMIN_REF}")
  fi

  fetch_opts+=("${TWGIT_REMOTE_NAME}" "+${TWGIT_REMOTE_REF}:${TWGIT_ADMIN_REF}")
  git fetch "${fetch_opts[@]}"
  git config --local --type=int "$TWGIT_LAST_FETCH_KEY" "$NOW"
}

set -x

setup_config_file() {
  setup_env

  if ! git rev-parse "${TWGIT_ADMIN_REF}" &>/dev/null ; then
    do_fetch_admin_ref || die "could not fetch admin ref ${TWGIT_ADMIN_REF}"
  fi

  # check the last time we updated the ref
  lastfetch="$(git config --get --local --type=int --default=0 "${TWGIT_LAST_FETCH_KEY}")"

  if [[ $(( NOW - lastfetch )) -lt 0 ]]; then
    echo "${TWGIT_LAST_FETCH_KEY} time was in the future?! resetting invalid value" >&2
    lastfetch=0
    git config --local --type=int "${TWGIT_LAST_FETCH_KEY}" 0
  fi

  # if it was last updated over an hour ago, then fetch it
  if [[ $(( NOW - lastfetch )) -gt $FETCH_DELAY_SEC ]]; then
    do_fetch_admin_ref
  fi

  export TWGIT_CONFIG="$GIT_DIR/twgit.toml"

  git cat-file blob "${TWGIT_ADMIN_REF}:${TWGIT_CONFIG_BLOB}" > "${TWGIT_CONFIG}"
}

# if someone set TWGIT_CONFIG in the environment skip all this and use it
if [[ -z "${TWGIT_CONFIG:-}" ]]; then
  setup_config_file
fi

exec "${TWGIT_BIN}" "$@"
