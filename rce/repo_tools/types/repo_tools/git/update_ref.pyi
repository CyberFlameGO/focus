from typing import IO, List, Optional

class UpdateRef:
    def __enter__(self) -> UpdateRef: ...
    def __exit__(self, e1: None, e2: None, e3: None) -> None: ...
    def __init__(self, fp: Optional[IO[bytes]] = ...) -> None: ...
    def _write(self, *stuff: bytes) -> None: ...
    def close(self) -> None: ...
    def commit(self) -> None: ...
    def create(self, ref: str, oid: str) -> None: ...
    def delete(self, ref: str) -> None: ...
    def done(self) -> None: ...
    @property
    def file(self) -> IO[bytes]: ...
    def flush(self) -> None: ...
    def prepare(self) -> None: ...
    def rewind(self) -> None: ...
    def run(self, git_dir: str) -> None: ...
    def start(self) -> None: ...


def run_z(git_dir: str, input: IO[bytes]) -> None: ...
def delete(git_dir: str, refs: List[str]) -> None: ...
